// 0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다.

// x의 모든 0을 제거합니다.
// x의 길이를 c라고 하면, x를 "c를 2진법으로 표현한 문자열"로 바꿉니다.
// 예를 들어, x = "0111010"이라면, x에 이진 변환을 가하면 x = "0111010" -> "1111" -> "100" 이 됩니다.

// 0과 1로 이루어진 문자열 s가 매개변수로 주어집니다. s가 "1"이 될 때까지 계속해서 s에 이진 변환을 가했을 때, 이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 solution 함수를 완성해주세요.


function solution(s) {
  let answer = [0, 0];
  // 1. S가 1일때까지 반복
  while (s !== "1") {
    // 2. 배열 변환
    s = s.split("");
    // 3. 0빼고 1의 길이만 담는 값의 길이 구하기
    let temp = s.filter((el) => el === "1").length;
    // 4. 1이 아니니까 answer 0번째 값에는 1추가, 1번째 값에는 0의 개수값 추가
    answer[0] += 1;
    answer[1] += s.length - temp;
    // 5. s는 다시 1의 길이 값의 이진법
    s = temp.toString(2);
  }
  return answer;
}
